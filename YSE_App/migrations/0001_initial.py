# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-09 08:57
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlternateTransientNames',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='FollowUp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_priority', models.IntegerField(blank=True, null=True)),
                ('phot_priority', models.IntegerField(blank=True, null=True)),
                ('offset_star_ra', models.FloatField(blank=True, null=True)),
                ('offset_star_dec', models.FloatField(blank=True, null=True)),
                ('offset_north', models.FloatField(blank=True, null=True)),
                ('offset_east', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ra', models.FloatField()),
                ('dec', models.FloatField()),
                ('redshift', models.FloatField(blank=True, null=True)),
                ('redshift_err', models.FloatField(blank=True, null=True)),
                ('r_a', models.FloatField(blank=True, null=True)),
                ('r_b', models.FloatField(blank=True, null=True)),
                ('theta', models.FloatField(blank=True, null=True)),
                ('eff_offset', models.FloatField(blank=True, null=True)),
                ('photo_z', models.FloatField(blank=True, null=True)),
                ('photo_z_err', models.FloatField(blank=True, null=True)),
                ('photo_z_source', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='HostClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='HostMorphology',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='HostSED',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metalicity', models.FloatField(blank=True, null=True)),
                ('metalicity_err', models.FloatField(blank=True, null=True)),
                ('log_SFR', models.FloatField(blank=True, null=True)),
                ('log_SFR_err', models.FloatField(blank=True, null=True)),
                ('log_sSFR', models.FloatField(blank=True, null=True)),
                ('log_sSFR_err', models.FloatField(blank=True, null=True)),
                ('log_mass', models.FloatField(blank=True, null=True)),
                ('log_mass_err', models.FloatField(blank=True, null=True)),
                ('ebv', models.FloatField(blank=True, null=True)),
                ('ebv_err', models.FloatField(blank=True, null=True)),
                ('log_age', models.FloatField(blank=True, null=True)),
                ('log_age_err', models.FloatField(blank=True, null=True)),
                ('redshift', models.FloatField(blank=True, null=True)),
                ('redshift_err', models.FloatField(blank=True, null=True)),
                ('fit_chi2', models.FloatField(blank=True, null=True)),
                ('fit_n', models.IntegerField(blank=True, null=True)),
                ('fit_plot_file', models.TextField(blank=True, null=True)),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Host')),
            ],
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('zero_point', models.FloatField(blank=True, null=True)),
                ('zero_point_err', models.FloatField(blank=True, null=True)),
                ('sky', models.FloatField(blank=True, null=True)),
                ('sky_rms', models.FloatField(blank=True, null=True)),
                ('img_file', models.TextField()),
                ('dcmp_file', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InformationSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('date_modified', models.DateTimeField()),
                ('follow_up', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.FollowUp')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Host')),
            ],
        ),
        migrations.CreateModel(
            name='ObservationGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Observatory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ObservingNightDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observing_night', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Phase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='PhotometricBand',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('lambda_eff', models.CharField(max_length=64)),
                ('throughput_file', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Photometry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obs_date', models.DateTimeField()),
                ('flux', models.FloatField(blank=True, null=True)),
                ('flux_err', models.FloatField(blank=True, null=True)),
                ('mag', models.FloatField(blank=True, null=True)),
                ('mag_err', models.FloatField(blank=True, null=True)),
                ('forced', models.NullBooleanField()),
                ('dq', models.NullBooleanField()),
                ('band', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.PhotometricBand')),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Host')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Image')),
                ('obs_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.ObservationGroup')),
            ],
        ),
        migrations.CreateModel(
            name='SEDType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='SpecData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wavelength', models.FloatField()),
                ('wavelength_err', models.FloatField(blank=True, null=True)),
                ('flux', models.FloatField()),
                ('flux_err', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Spectrum',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('spec_data_file', models.TextField()),
                ('spec_plot_file', models.TextField(blank=True, null=True)),
                ('redshift', models.FloatField(blank=True, null=True)),
                ('redshift_err', models.FloatField(blank=True, null=True)),
                ('redshift_quality', models.NullBooleanField()),
                ('snid_plot_file', models.TextField(blank=True, null=True)),
                ('obs_date', models.DateTimeField()),
                ('ra', models.FloatField()),
                ('dec', models.FloatField()),
                ('tdr', models.FloatField(blank=True, null=True)),
                ('host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Host')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Instrument')),
                ('obs_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.ObservationGroup')),
                ('spec_phase', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Phase')),
            ],
        ),
        migrations.CreateModel(
            name='Telescope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('too_hours', models.FloatField(blank=True, null=True)),
                ('observing_nights', models.FloatField(blank=True, null=True)),
                ('observatory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Observatory')),
            ],
        ),
        migrations.CreateModel(
            name='Transient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('ra', models.FloatField()),
                ('dec', models.FloatField()),
                ('redshift', models.FloatField(blank=True, null=True)),
                ('redshift_err', models.FloatField(blank=True, null=True)),
                ('redshift_source', models.CharField(blank=True, max_length=64, null=True)),
                ('disc_date', models.DateTimeField()),
                ('date_modified', models.DateTimeField()),
                ('non_detect_date', models.DateTimeField(blank=True, null=True)),
                ('non_detect_limit', models.FloatField(blank=True, null=True)),
                ('mw_ebv', models.FloatField(blank=True, null=True)),
                ('abs_mag_peak', models.FloatField(blank=True, null=True)),
                ('abs_mag_peak_date', models.DateTimeField(blank=True, null=True)),
                ('postage_stamp_file', models.TextField(blank=True, null=True)),
                ('abs_mag_peak_band', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.PhotometricBand')),
                ('best_host', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.Host')),
            ],
        ),
        migrations.CreateModel(
            name='TransientClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='TransientHostRank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WebResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.CharField(max_length=64)),
                ('date_modified', models.DateTimeField()),
                ('information_source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.InformationSource')),
                ('transient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Transient')),
            ],
        ),
        migrations.AddField(
            model_name='transient',
            name='best_spec_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.TransientClass'),
        ),
        migrations.AddField(
            model_name='transient',
            name='best_spectrum',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.Spectrum'),
        ),
        migrations.AddField(
            model_name='transient',
            name='non_detect_band',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.PhotometricBand'),
        ),
        migrations.AddField(
            model_name='transient',
            name='obs_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.ObservationGroup'),
        ),
        migrations.AddField(
            model_name='transient',
            name='photo_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.TransientClass'),
        ),
        migrations.AddField(
            model_name='spectrum',
            name='transient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Transient'),
        ),
        migrations.AddField(
            model_name='photometry',
            name='transient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Transient'),
        ),
        migrations.AddField(
            model_name='photometricband',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Telescope'),
        ),
        migrations.AddField(
            model_name='observingnightdates',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Telescope'),
        ),
        migrations.AddField(
            model_name='log',
            name='photometry',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Photometry'),
        ),
        migrations.AddField(
            model_name='log',
            name='spectrum',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Spectrum'),
        ),
        migrations.AddField(
            model_name='log',
            name='transient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Transient'),
        ),
        migrations.AddField(
            model_name='log',
            name='web_resource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.WebResource'),
        ),
        migrations.AddField(
            model_name='instrument',
            name='telescope',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Telescope'),
        ),
        migrations.AddField(
            model_name='image',
            name='band',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.PhotometricBand'),
        ),
        migrations.AddField(
            model_name='hostsed',
            name='sed_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.SEDType'),
        ),
        migrations.AddField(
            model_name='host',
            name='band_sextract',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.PhotometricBand'),
        ),
        migrations.AddField(
            model_name='host',
            name='best_spec',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='YSE_App.Spectrum'),
        ),
        migrations.AddField(
            model_name='host',
            name='host_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.HostClass'),
        ),
        migrations.AddField(
            model_name='host',
            name='host_morphology',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.HostMorphology'),
        ),
        migrations.AddField(
            model_name='host',
            name='transient',
            field=models.ManyToManyField(to='YSE_App.Transient'),
        ),
        migrations.AddField(
            model_name='host',
            name='transient_host_rank',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.TransientHostRank'),
        ),
        migrations.AddField(
            model_name='followup',
            name='host',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Host'),
        ),
        migrations.AddField(
            model_name='followup',
            name='transient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='YSE_App.Transient'),
        ),
        migrations.AddField(
            model_name='alternatetransientnames',
            name='obs_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='YSE_App.ObservationGroup'),
        ),
    ]
